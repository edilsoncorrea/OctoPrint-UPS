#!/usr/bin/env python3
# Script para debug do plugin UPS com funcionalidades de recupera√ß√£o

import sys
import os

# Adiciona o diret√≥rio do plugin ao path
plugin_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, plugin_dir)

try:
    from octoprint_ups import UPS
    print("‚úÖ Plugin importado com sucesso!")
    
    # Testa instancia√ß√£o
    plugin_instance = UPS()
    print("‚úÖ Plugin instanciado com sucesso!")
    
    # Testa configura√ß√µes padr√£o
    defaults = plugin_instance.get_settings_defaults()
    print("‚úÖ Configura√ß√µes padr√£o:")
    for key, value in defaults.items():
        print(f"   {key}: {value}")
    
    # Verifica se todas as configura√ß√µes est√£o presentes
    required_settings = [
        'shutdown_temp_threshold', 
        'block_resume_on_battery',
        'save_print_state',
        'auto_recover_after_shutdown'
    ]
    
    print("\nüîç Verificando configura√ß√µes:")
    for setting in required_settings:
        if setting in defaults:
            print(f"‚úÖ {setting}: OK")
        else:
            print(f"‚ùå {setting}: FALTANDO")
    
    # Testa m√©todos de recupera√ß√£o
    print("\nüîß Testando m√©todos de recupera√ß√£o:")
    try:
        # Testa salvamento de estado (simulado)
        plugin_instance._saved_print_file = "test_file.gcode"
        plugin_instance._saved_print_progress = 50.5
        plugin_instance._saved_extruder_temp = 210
        plugin_instance._saved_bed_temp = 60
        
        print("‚úÖ Vari√°veis de estado configuradas")
        
        # Testa comandos de API
        api_commands = plugin_instance.get_api_commands()
        expected_commands = ['shutdown_ups', 'get_recovery_info', 'start_recovery', 'clear_recovery']
        
        for cmd in expected_commands:
            if cmd in api_commands:
                print(f"‚úÖ API Command '{cmd}': OK")
            else:
                print(f"‚ùå API Command '{cmd}': FALTANDO")
        
        print("\n‚úÖ Teste conclu√≠do com sucesso!")
        print("\nüìã Funcionalidades implementadas:")
        print("   ‚Ä¢ Salvamento de estado da impress√£o")
        print("   ‚Ä¢ Recupera√ß√£o ap√≥s shutdown")
        print("   ‚Ä¢ Detec√ß√£o de reconex√£o da impressora")
        print("   ‚Ä¢ APIs para controle manual")
        print("   ‚Ä¢ Configura√ß√µes de prote√ß√£o aprimoradas")
        
    except Exception as e:
        print(f"‚ùå Erro durante teste de m√©todos: {e}")
        
except ImportError as e:
    print(f"‚ùå Erro ao importar plugin: {e}")
except Exception as e:
    print(f"‚ùå Erro durante teste: {e}")
